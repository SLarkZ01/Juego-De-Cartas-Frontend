openapi: 3.0.3
info:
  title: Juego De Cartas API
  version: 1.0.0
  description: >-
    API REST para el backend de "Juego De Cartas" (Card Match Battle).
    Especificación alineada con los controladores actuales en `src/main/java/.../controller/rest`.
servers:
  - url: http://localhost:8080
    description: Development server

paths:
  /api/cartas:
    get:
      summary: Listar cartas
      description: Lista todas las cartas. Puede filtrarse por temática con el query parameter `tematica`.
      parameters:
        - in: query
          name: tematica
          schema:
            type: string
          required: false
      responses:
        '200':
          description: Lista de cartas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carta'

  /api/cartas/{codigo}:
    get:
      summary: Obtener carta por código
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Carta encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carta'
        '404':
          description: Carta no encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/cartas/sincronizar:
    post:
      summary: Sincronizar cartas desde API externa
      responses:
        '200':
          description: Cartas sincronizadas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carta'

  /api/partidas/crear:
    post:
      summary: Crear partida
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrearPartidaRequest'
      responses:
        '200':
          description: Partida creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartidaResponse'

  /api/partidas/{codigo}/unirse:
    post:
      summary: Unirse a partida existente
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnirsePartidaRequest'
      responses:
        '200':
          description: Jugador unido exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartidaResponse'

  /api/partidas/{codigo}:
    get:
      summary: Obtener información básica de la partida
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Información de la partida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartidaResponse'

  /api/partidas/{codigo}/detalle:
    get:
      summary: Obtener detalle completo de la partida para un jugador
      description: >-
        Devuelve la vista de la partida desde la perspectiva de `jugadorId`.
        Incluye `miJugador` con las cartas en mano del jugador solicitado y `jugadores`
        con la información pública del resto.
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
        - in: query
          name: jugadorId
          required: true
          schema:
            type: string
          description: ID del jugador que solicita el detalle (se usa para devolver `miJugador`)
      responses:
        '200':
          description: Detalle de la partida para el jugador
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartidaDetailResponse'
              example:
                codigo: "ABC123"
                jugadorId: "player-uuid-1234"
                estado: "EN_CURSO"
                turnoActual: "player-uuid-5678"
                atributoSeleccionado: "poder"
                jugadores:
                  - id: "player-uuid-1234"
                    nombre: "Goku"
                    numeroCartas: 5
                    orden: 1
                    conectado: true
                  - id: "player-uuid-5678"
                    nombre: "Vegeta"
                    numeroCartas: 5
                    orden: 2
                    conectado: true
                miJugador:
                  id: "player-uuid-1234"
                  nombre: "Goku"
                  cartasEnMano:
                    - "1A"
                    - "2B"
                    - "3C"
                  cartaActual: "1A"
                  numeroCartas: 5
                  transformacionActiva: "Super Saiyan"
                  indiceTransformacion: 0
                tiempoRestante: 1200

        '400':
          description: Parámetros inválidos (ej. falta jugadorId)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 400
                error: "Bad Request"
                message: "Parámetro 'jugadorId' es obligatorio"
                path: "/api/partidas/ABC123/detalle"
                timestamp: "2025-10-09T12:00:00Z"

        '404':
          description: Partida o jugador no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                status: 404
                error: "Not Found"
                message: "Partida 'ABC123' no encontrada"
                path: "/api/partidas/ABC123/detalle"
                timestamp: "2025-10-09T12:00:00Z"

  /api/partidas/{codigo}/iniciar:
    post:
      summary: Iniciar partida
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Partida iniciada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partida'

  /api/partidas/{codigo}/seleccionar-atributo:
    post:
      summary: Seleccionar atributo para la ronda
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SeleccionarAtributoRequest'
      responses:
        '200':
          description: Atributo seleccionado exitosamente

  /api/partidas/{codigo}/jugar:
    post:
      summary: Jugar carta en la ronda actual
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JugarCartaRequest'
      responses:
        '200':
          description: Carta jugada exitosamente

  /api/partidas/{codigo}/transformaciones/activar:
    post:
      summary: Activar transformación
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivarTransformacionRequest'
      responses:
        '200':
          description: Transformación activada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformacionResponse'

  /api/partidas/{codigo}/transformaciones/desactivar:
    post:
      summary: Desactivar transformación
      parameters:
        - in: path
          name: codigo
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DesactivarTransformacionRequest'
      responses:
        '200':
          description: Transformación desactivada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformacionResponse'

components:
  schemas:
    Carta:
      type: object
      properties:
        id:
          type: string
        codigo:
          type: string
        nombre:
          type: string
        imagenUrl:
          type: string
        atributos:
          type: object
          additionalProperties:
            type: integer
        tematica:
          type: string
        paquete:
          type: integer
        descripcion:
          type: string
        raza:
          type: string
        genero:
          type: string
        afiliacion:
          type: string
        planeta:
          type: object
          properties:
            nombre:
              type: string
            imagen:
              type: string
            descripcion:
              type: string
            isDestroyed:
              type: boolean
        transformaciones:
          type: array
          items:
            type: object
            properties:
              nombre:
                type: string
              imagen:
                type: string
              ki:
                type: string

    CrearPartidaRequest:
      type: object
      properties:
        nombreJugador:
          type: string
      required: [nombreJugador]

    UnirsePartidaRequest:
      type: object
      properties:
        nombreJugador:
          type: string
      required: [nombreJugador]

    SeleccionarAtributoRequest:
      type: object
      properties:
        jugadorId:
          type: string
        atributo:
          type: string
      required: [jugadorId, atributo]

    JugarCartaRequest:
      type: object
      properties:
        jugadorId:
          type: string
      required: [jugadorId]

    ActivarTransformacionRequest:
      type: object
      properties:
        jugadorId:
          type: string
        indiceTransformacion:
          type: integer
          minimum: 0
      required: [jugadorId, indiceTransformacion]

    DesactivarTransformacionRequest:
      type: object
      properties:
        jugadorId:
          type: string
      required: [jugadorId]

    TransformacionResponse:
      type: object
      properties:
        jugadorId:
          type: string
        nombreJugador:
          type: string
        nombreTransformacion:
          type: string
          nullable: true
        indiceTransformacion:
          type: integer
        multiplicador:
          type: number
          format: double
        mensaje:
          type: string
        exitoso:
          type: boolean

    PartidaResponse:
      type: object
      properties:
        codigo:
          type: string
        jugadorId:
          type: string
        jugadores:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              nombre:
                type: string

    Partida:
      type: object
      properties:
        id:
          type: string
        codigo:
          type: string
        estado:
          type: string
        jugadores:
          type: array
          items:
            $ref: '#/components/schemas/Jugador'
        cartasEnMesa:
          type: array
          items:
            type: object
        turnoActual:
          type: string
        atributoSeleccionado:
          type: string
        ganador:
          type: string
        tiempoLimite:
          type: integer

    PartidaDetailResponse:
      type: object
      properties:
        codigo:
          type: string
        jugadorId:
          type: string
        estado:
          type: string
        turnoActual:
          type: string
        atributoSeleccionado:
          type: string
        jugadores:
          type: array
          items:
            $ref: '#/components/schemas/JugadorPublic'
        miJugador:
          $ref: '#/components/schemas/JugadorPrivate'
        tiempoRestante:
          type: integer

    Jugador:
      type: object
      properties:
        id:
          type: string
        nombre:
          type: string
        cartasEnMano:
          type: array
          items:
            type: string
        cartaActual:
          type: string
        numeroCartas:
          type: integer
        orden:
          type: integer
        conectado:
          type: boolean
        transformacionActiva:
          type: string
        indiceTransformacion:
          type: integer

    JugadorPublic:
      type: object
      properties:
        id:
          type: string
        nombre:
          type: string
        numeroCartas:
          type: integer
        orden:
          type: integer
        conectado:
          type: boolean

    JugadorPrivate:
      type: object
      properties:
        id:
          type: string
        nombre:
          type: string
        cartasEnMano:
          type: array
          items:
            type: string
        cartaActual:
          type: string
        numeroCartas:
          type: integer
        transformacionActiva:
          type: string
        indiceTransformacion:
          type: integer

    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
        timestamp:
          type: string
